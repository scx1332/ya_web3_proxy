//autogenerated by compile.py script
use actix_web::HttpResponse;
use actix_web::{web, Responder, Scope};
use base64::{engine::general_purpose, Engine as _};

pub async fn fn_01() -> impl Responder {
    let base64 = "PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KICAgIDxoZWFkPgogICAgICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04IiAvPgogICAgICAgIDx0aXRsZT5WaXRlIHRlbXBsYXRlPC90aXRsZT4KICAgICAgICA8bGluayByZWw9Imljb24iIGhyZWY9Ii9mcm9udGVuZC9sb2dvLnBuZyIgLz4KICAgICAgICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEuMCIgLz4KICAgICAgPHNjcmlwdCB0eXBlPSJtb2R1bGUiIGNyb3Nzb3JpZ2luIHNyYz0iL2Zyb250ZW5kL2Fzc2V0cy9pbmRleC0wZjAyY2NhZC5qcyI+PC9zY3JpcHQ+CiAgICAgIDxsaW5rIHJlbD0ibW9kdWxlcHJlbG9hZCIgY3Jvc3NvcmlnaW4gaHJlZj0iL2Zyb250ZW5kL2Fzc2V0cy9yZWFjdC1hMTAyOTcwYS5qcyI+CiAgICAgIDxsaW5rIHJlbD0ibW9kdWxlcHJlbG9hZCIgY3Jvc3NvcmlnaW4gaHJlZj0iL2Zyb250ZW5kL2Fzc2V0cy9zY2hlZHVsZXItMDRjZTA1ODIuanMiPgogICAgICA8bGluayByZWw9Im1vZHVsZXByZWxvYWQiIGNyb3Nzb3JpZ2luIGhyZWY9Ii9mcm9udGVuZC9hc3NldHMvcmVhY3QtZG9tLTFiYWUxMWFkLmpzIj4KICAgICAgPGxpbmsgcmVsPSJtb2R1bGVwcmVsb2FkIiBjcm9zc29yaWdpbiBocmVmPSIvZnJvbnRlbmQvYXNzZXRzL0ByZW1peC1ydW4tY2I1ODRkZWUuanMiPgogICAgICA8bGluayByZWw9Im1vZHVsZXByZWxvYWQiIGNyb3Nzb3JpZ2luIGhyZWY9Ii9mcm9udGVuZC9hc3NldHMvcmVhY3Qtcm91dGVyLWY0OTMzY2QzLmpzIj4KICAgICAgPGxpbmsgcmVsPSJtb2R1bGVwcmVsb2FkIiBjcm9zc29yaWdpbiBocmVmPSIvZnJvbnRlbmQvYXNzZXRzL3JlYWN0LXJvdXRlci1kb20tM2Y3MTA5ODAuanMiPgogICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Ii9mcm9udGVuZC9hc3NldHMvaW5kZXgtNWM2ZWI4NmUuY3NzIj4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxkaXYgaWQ9InJvb3QiPjwvZGl2PgogICAgICAgIAogICAgPC9ib2R5Pgo8L2h0bWw+Cg==";
    let html = general_purpose::STANDARD.decode(base64).unwrap();
    HttpResponse::Ok()
        .content_type("text/html")
        .body(html)
}

pub async fn fn_02() -> impl Responder {
    let base64 = "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgBAMAAACBVGfHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAGUExURRsB3/37+pgdCB8AAAAJcEhZcwAADsAAAA7AAWrWiQkAAABJSURBVCjPY6AREBQUJCTAgEsAphSuBVOAAY9hjIKCAijWoQiAaEYBRgEUh6EKACFYC4YA3AwMlzKgOQyrAMQMvAIgdwwiAQYGALP4CW/k98XoAAAAAElFTkSuQmCC";
    let html = general_purpose::STANDARD.decode(base64).unwrap();
    HttpResponse::Ok()
        .content_type("image/png")
        .body(html)
}

pub async fn fn_03() -> impl Responder {
    let base64 = "";
    let html = general_purpose::STANDARD.decode(base64).unwrap();
    HttpResponse::Ok()
        .content_type("application/javascript")
        .body(html)
}

pub async fn fn_04() -> impl Responder {
    let base64 = "";
    let html = general_purpose::STANDARD.decode(base64).unwrap();
    HttpResponse::Ok()
        .content_type("application/javascript")
        .body(html)
}

pub async fn fn_05() -> impl Responder {
    let base64 = "Ym9keXtmb250LWZhbWlseTpIZWx2ZXRpY2EsQXJpYWwsc2Fucy1zZXJpZjtmb250LXNpemU6MTRweH1jb2Rle2ZvbnQtZmFtaWx5OnNvdXJjZS1jb2RlLXBybyxNZW5sbyxNb25hY28sQ29uc29sYXMsQ291cmllciBOZXcsbW9ub3NwYWNlfS5ib3JkZXJ7Ym9yZGVyOjFweCBzb2xpZCBibGFja30uZGl2e2JhY2tncm91bmQtY29sb3I6IzMzM31hOmxpbmssYTp2aXNpdGVkLGE6aG92ZXIsYTphY3RpdmV7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Y29sb3I6IzAwMDA4Yn1hOmhvdmVye2NvbG9yOiMxNDM0YjQ7YmFja2dyb3VuZC1jb2xvcjojZjJmMmZmfWJ1dHRvbntkaXNwbGF5OmlubGluZS1ibG9jaztvdXRsaW5lOm5vbmU7Y3Vyc29yOnBvaW50ZXI7Ym9yZGVyOjFweCBzb2xpZCAjMGY2MmZlO3RleHQtYWxpZ246bGVmdDt2ZXJ0aWNhbC1hbGlnbjp0b3A7cGFkZGluZzpjYWxjKC44NzVyZW0gLSAzcHgpIDYzcHggY2FsYyguODc1cmVtIC0gM3B4KSAxNXB4O2JhY2tncm91bmQtY29sb3I6IzAwMDA7Zm9udC1zaXplOjFlbTttaW4taGVpZ2h0OjJyZW07Y29sb3I6IzBmNjJmZX1idXR0b246aG92ZXJ7dHJhbnNpdGlvbjphbGwgLjNzIGVhc2Utb3V0O2JhY2tncm91bmQtY29sb3I6IzAzNTNlOTtjb2xvcjojZmZmfWJ1dHRvbjpkaXNhYmxlZCxidXR0b25bZGlzYWJsZWRde2JvcmRlcjoxcHggc29saWQgIzk5OTk5OTtiYWNrZ3JvdW5kLWNvbG9yOiNjY2M7Y29sb3I6IzY2NjtjdXJzb3I6ZGVmYXVsdH0udG9wLWhlYWRlcntkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO2JvcmRlci10b3A6I2RkZGRkZCAxcHggc29saWQ7Ym9yZGVyLWJvdHRvbTojZGRkZGRkIDFweCBzb2xpZH0udG9wLWhlYWRlci10aXRsZXtkaXNwbGF5OmZsZXg7cGFkZGluZzoxMHB4O2ZvbnQtd2VpZ2h0OjcwMDttYXJnaW4tcmlnaHQ6MzBweH0udG9wLWhlYWRlci1uYXZpZ2F0aW9ue2Rpc3BsYXk6ZmxleDtwYWRkaW5nOjEwcHh9LnRvcC1oZWFkZXItbmF2aWdhdGlvbiBhe2Rpc3BsYXk6ZmxleDtwYWRkaW5nOjAgMTBweH1kaXYuYmFja2VuZC1zZXR0aW5nc3twYWRkaW5nOjEwcHg7bWFyZ2luOjEwcHg7Ym9yZGVyOjFweCBzb2xpZCBncmF5fWRpdi5iYWNrZW5kLXNldHRpbmdzIGlucHV0W3R5cGU9dGV4dF17d2lkdGg6MzBlbX1kaXYuYmFja2VuZC1zZXR0aW5ncyBkaXYuYm94LWxpbmV7cGFkZGluZy10b3A6MTBweH1kaXYuYmFja2VuZC1zZXR0aW5ncyBkaXYuYm94LWxpbmUgaW5wdXR7bWFyZ2luLXJpZ2h0OjEwcHh9LndlbGNvbWUtcGFnZXtiYWNrZ3JvdW5kLWNvbG9yOiNmNWY1ZjU7ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcn0K";
    let html = general_purpose::STANDARD.decode(base64).unwrap();
    HttpResponse::Ok()
        .content_type("text/css")
        .body(html)
}

pub async fn fn_06() -> impl Responder {
    let base64 = "";
    let html = general_purpose::STANDARD.decode(base64).unwrap();
    HttpResponse::Ok()
        .content_type("application/javascript")
        .body(html)
}

pub async fn fn_07() -> impl Responder {
    let base64 = "";
    let html = general_purpose::STANDARD.decode(base64).unwrap();
    HttpResponse::Ok()
        .content_type("application/javascript")
        .body(html)
}

pub async fn fn_08() -> impl Responder {
    let base64 = "aW1wb3J0e3IgYXMgc31mcm9tIi4vcmVhY3QtYTEwMjk3MGEuanMiO2ltcG9ydHtSIGFzIEMsdSBhcyBFLGEgYXMgTyxiIGFzIFAsYyBhcyB4fWZyb20iLi9yZWFjdC1yb3V0ZXItZjQ5MzNjZDMuanMiO2ltcG9ydHtjIGFzIGosYiBhcyB2fWZyb20iLi9AcmVtaXgtcnVuLWNiNTg0ZGVlLmpzIjsvKioKICogUmVhY3QgUm91dGVyIERPTSB2Ni44LjAKICoKICogQ29weXJpZ2h0IChjKSBSZW1peCBTb2Z0d2FyZSBJbmMuCiAqCiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZQogKiBMSUNFTlNFLm1kIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuCiAqCiAqIEBsaWNlbnNlIE1JVAogKi9mdW5jdGlvbiB3KCl7cmV0dXJuIHc9T2JqZWN0LmFzc2lnbj9PYmplY3QuYXNzaWduLmJpbmQoKTpmdW5jdGlvbihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgYT1hcmd1bWVudHNbdF07Zm9yKHZhciByIGluIGEpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGEscikmJihlW3JdPWFbcl0pfXJldHVybiBlfSx3LmFwcGx5KHRoaXMsYXJndW1lbnRzKX1mdW5jdGlvbiBLKGUsdCl7aWYoZT09bnVsbClyZXR1cm57fTt2YXIgYT17fSxyPU9iamVjdC5rZXlzKGUpLG8sbjtmb3Iobj0wO248ci5sZW5ndGg7bisrKW89cltuXSwhKHQuaW5kZXhPZihvKT49MCkmJihhW29dPWVbb10pO3JldHVybiBhfWZ1bmN0aW9uIEIoZSl7cmV0dXJuISEoZS5tZXRhS2V5fHxlLmFsdEtleXx8ZS5jdHJsS2V5fHxlLnNoaWZ0S2V5KX1mdW5jdGlvbiBGKGUsdCl7cmV0dXJuIGUuYnV0dG9uPT09MCYmKCF0fHx0PT09Il9zZWxmIikmJiFCKGUpfWNvbnN0IFc9WyJvbkNsaWNrIiwicmVsYXRpdmUiLCJyZWxvYWREb2N1bWVudCIsInJlcGxhY2UiLCJzdGF0ZSIsInRhcmdldCIsInRvIiwicHJldmVudFNjcm9sbFJlc2V0Il07ZnVuY3Rpb24gQShlKXtsZXR7YmFzZW5hbWU6dCxjaGlsZHJlbjphLHdpbmRvdzpyfT1lLG89cy51c2VSZWYoKTtvLmN1cnJlbnQ9PW51bGwmJihvLmN1cnJlbnQ9aih7d2luZG93OnIsdjVDb21wYXQ6ITB9KSk7bGV0IG49by5jdXJyZW50LFtpLGNdPXMudXNlU3RhdGUoe2FjdGlvbjpuLmFjdGlvbixsb2NhdGlvbjpuLmxvY2F0aW9ufSk7cmV0dXJuIHMudXNlTGF5b3V0RWZmZWN0KCgpPT5uLmxpc3RlbihjKSxbbl0pLHMuY3JlYXRlRWxlbWVudChDLHtiYXNlbmFtZTp0LGNoaWxkcmVuOmEsbG9jYXRpb246aS5sb2NhdGlvbixuYXZpZ2F0aW9uVHlwZTppLmFjdGlvbixuYXZpZ2F0b3I6bn0pfWNvbnN0IEQ9dHlwZW9mIHdpbmRvdzwidSImJnR5cGVvZiB3aW5kb3cuZG9jdW1lbnQ8InUiJiZ0eXBlb2Ygd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQ8InUiLE09cy5mb3J3YXJkUmVmKGZ1bmN0aW9uKHQsYSl7bGV0e29uQ2xpY2s6cixyZWxhdGl2ZTpvLHJlbG9hZERvY3VtZW50Om4scmVwbGFjZTppLHN0YXRlOmMsdGFyZ2V0OmQsdG86dSxwcmV2ZW50U2Nyb2xsUmVzZXQ6cH09dCxtPUsodCxXKSxsPXR5cGVvZiB1PT0ic3RyaW5nIj91OnYodSkseT0vXlthLXorXSs6XC9cLy9pLnRlc3QobCl8fGwuc3RhcnRzV2l0aCgiLy8iKSxnPWwsUj0hMTtpZihEJiZ5KXtsZXQgZj1uZXcgVVJMKHdpbmRvdy5sb2NhdGlvbi5ocmVmKSxoPWwuc3RhcnRzV2l0aCgiLy8iKT9uZXcgVVJMKGYucHJvdG9jb2wrbCk6bmV3IFVSTChsKTtoLm9yaWdpbj09PWYub3JpZ2luP2c9aC5wYXRobmFtZStoLnNlYXJjaCtoLmhhc2g6Uj0hMH1sZXQgaz1FKGcse3JlbGF0aXZlOm99KSxTPUgoZyx7cmVwbGFjZTppLHN0YXRlOmMsdGFyZ2V0OmQscHJldmVudFNjcm9sbFJlc2V0OnAscmVsYXRpdmU6b30pO2Z1bmN0aW9uIFUoZil7ciYmcihmKSxmLmRlZmF1bHRQcmV2ZW50ZWR8fFMoZil9cmV0dXJuIHMuY3JlYXRlRWxlbWVudCgiYSIsdyh7fSxtLHtocmVmOnk/bDprLG9uQ2xpY2s6Unx8bj9yOlUscmVmOmEsdGFyZ2V0OmR9KSl9KTt2YXIgYjsoZnVuY3Rpb24oZSl7ZS5Vc2VTY3JvbGxSZXN0b3JhdGlvbj0idXNlU2Nyb2xsUmVzdG9yYXRpb24iLGUuVXNlU3VibWl0SW1wbD0idXNlU3VibWl0SW1wbCIsZS5Vc2VGZXRjaGVyPSJ1c2VGZXRjaGVyIn0pKGJ8fChiPXt9KSk7dmFyIEw7KGZ1bmN0aW9uKGUpe2UuVXNlRmV0Y2hlcnM9InVzZUZldGNoZXJzIixlLlVzZVNjcm9sbFJlc3RvcmF0aW9uPSJ1c2VTY3JvbGxSZXN0b3JhdGlvbiJ9KShMfHwoTD17fSkpO2Z1bmN0aW9uIEgoZSx0KXtsZXR7dGFyZ2V0OmEscmVwbGFjZTpyLHN0YXRlOm8scHJldmVudFNjcm9sbFJlc2V0Om4scmVsYXRpdmU6aX09dD09PXZvaWQgMD97fTp0LGM9TygpLGQ9UCgpLHU9eChlLHtyZWxhdGl2ZTppfSk7cmV0dXJuIHMudXNlQ2FsbGJhY2socD0+e2lmKEYocCxhKSl7cC5wcmV2ZW50RGVmYXVsdCgpO2xldCBtPXIhPT12b2lkIDA/cjp2KGQpPT09dih1KTtjKGUse3JlcGxhY2U6bSxzdGF0ZTpvLHByZXZlbnRTY3JvbGxSZXNldDpuLHJlbGF0aXZlOml9KX19LFtkLGMsdSxyLG8sYSxlLG4saV0pfWV4cG9ydHtBIGFzIEIsTSBhcyBMfTsK";
    let html = general_purpose::STANDARD.decode(base64).unwrap();
    HttpResponse::Ok()
        .content_type("application/javascript")
        .body(html)
}

pub async fn fn_09() -> impl Responder {
    let base64 = "";
    let html = general_purpose::STANDARD.decode(base64).unwrap();
    HttpResponse::Ok()
        .content_type("application/javascript")
        .body(html)
}

pub async fn fn_10() -> impl Responder {
    let base64 = "dmFyIEg9e30sVT17Z2V0IGV4cG9ydHMoKXtyZXR1cm4gSH0sc2V0IGV4cG9ydHMobCl7SD1sfX0sSj17fTsvKioKICogQGxpY2Vuc2UgUmVhY3QKICogc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzCiAqCiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLgogKgogKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGUKICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLgogKi8oZnVuY3Rpb24obCl7ZnVuY3Rpb24gUChuLGUpe3ZhciB0PW4ubGVuZ3RoO24ucHVzaChlKTtuOmZvcig7MDx0Oyl7dmFyIGk9dC0xPj4+MSxyPW5baV07aWYoMDxoKHIsZSkpbltpXT1lLG5bdF09cix0PWk7ZWxzZSBicmVhayBufX1mdW5jdGlvbiBvKG4pe3JldHVybiBuLmxlbmd0aD09PTA/bnVsbDpuWzBdfWZ1bmN0aW9uIF8obil7aWYobi5sZW5ndGg9PT0wKXJldHVybiBudWxsO3ZhciBlPW5bMF0sdD1uLnBvcCgpO2lmKHQhPT1lKXtuWzBdPXQ7bjpmb3IodmFyIGk9MCxyPW4ubGVuZ3RoLHc9cj4+PjE7aTx3Oyl7dmFyIHY9MiooaSsxKS0xLE49blt2XSxiPXYrMSxJPW5bYl07aWYoMD5oKE4sdCkpYjxyJiYwPmgoSSxOKT8obltpXT1JLG5bYl09dCxpPWIpOihuW2ldPU4sblt2XT10LGk9dik7ZWxzZSBpZihiPHImJjA+aChJLHQpKW5baV09SSxuW2JdPXQsaT1iO2Vsc2UgYnJlYWsgbn19cmV0dXJuIGV9ZnVuY3Rpb24gaChuLGUpe3ZhciB0PW4uc29ydEluZGV4LWUuc29ydEluZGV4O3JldHVybiB0IT09MD90Om4uaWQtZS5pZH1pZih0eXBlb2YgcGVyZm9ybWFuY2U9PSJvYmplY3QiJiZ0eXBlb2YgcGVyZm9ybWFuY2Uubm93PT0iZnVuY3Rpb24iKXt2YXIgSz1wZXJmb3JtYW5jZTtsLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiBLLm5vdygpfX1lbHNle3ZhciBSPURhdGUsTz1SLm5vdygpO2wudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIFIubm93KCktT319dmFyIGY9W10sYz1bXSxRPTEsYT1udWxsLHU9MyxtPSExLHM9ITEseT0hMSxqPXR5cGVvZiBzZXRUaW1lb3V0PT0iZnVuY3Rpb24iP3NldFRpbWVvdXQ6bnVsbCxCPXR5cGVvZiBjbGVhclRpbWVvdXQ9PSJmdW5jdGlvbiI/Y2xlYXJUaW1lb3V0Om51bGwsRD10eXBlb2Ygc2V0SW1tZWRpYXRlPCJ1Ij9zZXRJbW1lZGlhdGU6bnVsbDt0eXBlb2YgbmF2aWdhdG9yPCJ1IiYmbmF2aWdhdG9yLnNjaGVkdWxpbmchPT12b2lkIDAmJm5hdmlnYXRvci5zY2hlZHVsaW5nLmlzSW5wdXRQZW5kaW5nIT09dm9pZCAwJiZuYXZpZ2F0b3Iuc2NoZWR1bGluZy5pc0lucHV0UGVuZGluZy5iaW5kKG5hdmlnYXRvci5zY2hlZHVsaW5nKTtmdW5jdGlvbiBUKG4pe2Zvcih2YXIgZT1vKGMpO2UhPT1udWxsOyl7aWYoZS5jYWxsYmFjaz09PW51bGwpXyhjKTtlbHNlIGlmKGUuc3RhcnRUaW1lPD1uKV8oYyksZS5zb3J0SW5kZXg9ZS5leHBpcmF0aW9uVGltZSxQKGYsZSk7ZWxzZSBicmVhaztlPW8oYyl9fWZ1bmN0aW9uIEUobil7aWYoeT0hMSxUKG4pLCFzKWlmKG8oZikhPT1udWxsKXM9ITAsTShDKTtlbHNle3ZhciBlPW8oYyk7ZSE9PW51bGwmJkYoRSxlLnN0YXJ0VGltZS1uKX19ZnVuY3Rpb24gQyhuLGUpe3M9ITEseSYmKHk9ITEsQihkKSxkPS0xKSxtPSEwO3ZhciB0PXU7dHJ5e2ZvcihUKGUpLGE9byhmKTthIT09bnVsbCYmKCEoYS5leHBpcmF0aW9uVGltZT5lKXx8biYmIUEoKSk7KXt2YXIgaT1hLmNhbGxiYWNrO2lmKHR5cGVvZiBpPT0iZnVuY3Rpb24iKXthLmNhbGxiYWNrPW51bGwsdT1hLnByaW9yaXR5TGV2ZWw7dmFyIHI9aShhLmV4cGlyYXRpb25UaW1lPD1lKTtlPWwudW5zdGFibGVfbm93KCksdHlwZW9mIHI9PSJmdW5jdGlvbiI/YS5jYWxsYmFjaz1yOmE9PT1vKGYpJiZfKGYpLFQoZSl9ZWxzZSBfKGYpO2E9byhmKX1pZihhIT09bnVsbCl2YXIgdz0hMDtlbHNle3ZhciB2PW8oYyk7diE9PW51bGwmJkYoRSx2LnN0YXJ0VGltZS1lKSx3PSExfXJldHVybiB3fWZpbmFsbHl7YT1udWxsLHU9dCxtPSExfX12YXIgaz0hMSxwPW51bGwsZD0tMSxxPTUsej0tMTtmdW5jdGlvbiBBKCl7cmV0dXJuIShsLnVuc3RhYmxlX25vdygpLXo8cSl9ZnVuY3Rpb24gTCgpe2lmKHAhPT1udWxsKXt2YXIgbj1sLnVuc3RhYmxlX25vdygpO3o9bjt2YXIgZT0hMDt0cnl7ZT1wKCEwLG4pfWZpbmFsbHl7ZT9nKCk6KGs9ITEscD1udWxsKX19ZWxzZSBrPSExfXZhciBnO2lmKHR5cGVvZiBEPT0iZnVuY3Rpb24iKWc9ZnVuY3Rpb24oKXtEKEwpfTtlbHNlIGlmKHR5cGVvZiBNZXNzYWdlQ2hhbm5lbDwidSIpe3ZhciBHPW5ldyBNZXNzYWdlQ2hhbm5lbCxTPUcucG9ydDI7Ry5wb3J0MS5vbm1lc3NhZ2U9TCxnPWZ1bmN0aW9uKCl7Uy5wb3N0TWVzc2FnZShudWxsKX19ZWxzZSBnPWZ1bmN0aW9uKCl7aihMLDApfTtmdW5jdGlvbiBNKG4pe3A9bixrfHwoaz0hMCxnKCkpfWZ1bmN0aW9uIEYobixlKXtkPWooZnVuY3Rpb24oKXtuKGwudW5zdGFibGVfbm93KCkpfSxlKX1sLnVuc3RhYmxlX0lkbGVQcmlvcml0eT01LGwudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHk9MSxsLnVuc3RhYmxlX0xvd1ByaW9yaXR5PTQsbC51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eT0zLGwudW5zdGFibGVfUHJvZmlsaW5nPW51bGwsbC51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eT0yLGwudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2s9ZnVuY3Rpb24obil7bi5jYWxsYmFjaz1udWxsfSxsLnVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7c3x8bXx8KHM9ITAsTShDKSl9LGwudW5zdGFibGVfZm9yY2VGcmFtZVJhdGU9ZnVuY3Rpb24obil7MD5ufHwxMjU8bj9jb25zb2xlLmVycm9yKCJmb3JjZUZyYW1lUmF0ZSB0YWtlcyBhIHBvc2l0aXZlIGludCBiZXR3ZWVuIDAgYW5kIDEyNSwgZm9yY2luZyBmcmFtZSByYXRlcyBoaWdoZXIgdGhhbiAxMjUgZnBzIGlzIG5vdCBzdXBwb3J0ZWQiKTpxPTA8bj9NYXRoLmZsb29yKDFlMy9uKTo1fSxsLnVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsPWZ1bmN0aW9uKCl7cmV0dXJuIHV9LGwudW5zdGFibGVfZ2V0Rmlyc3RDYWxsYmFja05vZGU9ZnVuY3Rpb24oKXtyZXR1cm4gbyhmKX0sbC51bnN0YWJsZV9uZXh0PWZ1bmN0aW9uKG4pe3N3aXRjaCh1KXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzp2YXIgZT0zO2JyZWFrO2RlZmF1bHQ6ZT11fXZhciB0PXU7dT1lO3RyeXtyZXR1cm4gbigpfWZpbmFsbHl7dT10fX0sbC51bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbj1mdW5jdGlvbigpe30sbC51bnN0YWJsZV9yZXF1ZXN0UGFpbnQ9ZnVuY3Rpb24oKXt9LGwudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5PWZ1bmN0aW9uKG4sZSl7c3dpdGNoKG4pe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOmNhc2UgNDpjYXNlIDU6YnJlYWs7ZGVmYXVsdDpuPTN9dmFyIHQ9dTt1PW47dHJ5e3JldHVybiBlKCl9ZmluYWxseXt1PXR9fSxsLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2s9ZnVuY3Rpb24obixlLHQpe3ZhciBpPWwudW5zdGFibGVfbm93KCk7c3dpdGNoKHR5cGVvZiB0PT0ib2JqZWN0IiYmdCE9PW51bGw/KHQ9dC5kZWxheSx0PXR5cGVvZiB0PT0ibnVtYmVyIiYmMDx0P2krdDppKTp0PWksbil7Y2FzZSAxOnZhciByPS0xO2JyZWFrO2Nhc2UgMjpyPTI1MDticmVhaztjYXNlIDU6cj0xMDczNzQxODIzO2JyZWFrO2Nhc2UgNDpyPTFlNDticmVhaztkZWZhdWx0OnI9NWUzfXJldHVybiByPXQrcixuPXtpZDpRKyssY2FsbGJhY2s6ZSxwcmlvcml0eUxldmVsOm4sc3RhcnRUaW1lOnQsZXhwaXJhdGlvblRpbWU6cixzb3J0SW5kZXg6LTF9LHQ+aT8obi5zb3J0SW5kZXg9dCxQKGMsbiksbyhmKT09PW51bGwmJm49PT1vKGMpJiYoeT8oQihkKSxkPS0xKTp5PSEwLEYoRSx0LWkpKSk6KG4uc29ydEluZGV4PXIsUChmLG4pLHN8fG18fChzPSEwLE0oQykpKSxufSxsLnVuc3RhYmxlX3Nob3VsZFlpZWxkPUEsbC51bnN0YWJsZV93cmFwQ2FsbGJhY2s9ZnVuY3Rpb24obil7dmFyIGU9dTtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgdD11O3U9ZTt0cnl7cmV0dXJuIG4uYXBwbHkodGhpcyxhcmd1bWVudHMpfWZpbmFsbHl7dT10fX19fSkoSik7KGZ1bmN0aW9uKGwpe2wuZXhwb3J0cz1KfSkoVSk7ZXhwb3J0e0ggYXMgc307Cg==";
    let html = general_purpose::STANDARD.decode(base64).unwrap();
    HttpResponse::Ok()
        .content_type("application/javascript")
        .body(html)
}

pub fn frontend_scope() -> Scope {
    let mut scope = Scope::new("frontend");
    scope = scope.route("/index.html", web::get().to(fn_01));
    scope = scope.route("/logo.png", web::get().to(fn_02));
    scope = scope.route("/assets/@remix-run-cb584dee.js", web::get().to(fn_03));
    scope = scope.route("/assets/index-0f02ccad.js", web::get().to(fn_04));
    scope = scope.route("/assets/index-5c6eb86e.css", web::get().to(fn_05));
    scope = scope.route("/assets/react-a102970a.js", web::get().to(fn_06));
    scope = scope.route("/assets/react-dom-1bae11ad.js", web::get().to(fn_07));
    scope = scope.route("/assets/react-router-dom-3f710980.js", web::get().to(fn_08));
    scope = scope.route("/assets/react-router-f4933cd3.js", web::get().to(fn_09));
    scope = scope.route("/assets/scheduler-04ce0582.js", web::get().to(fn_10));

    scope
}
